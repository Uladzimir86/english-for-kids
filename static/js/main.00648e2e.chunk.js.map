{"version":3,"sources":["components/user/main.tsx","assets/cards.tsx","components/user/topics-list.tsx","components/user/sidebar.tsx","components/user/header.tsx","components/user/star.tsx","components/user/app.tsx","index.tsx"],"names":["el","rightCard","cards","word","translation","image","audioSrc","arr","TopicsList","index","list","map","item","ind","classLink","toString","className","to","Sidebar","props","class","type","value","Header","toggleSidebar","setState","state","sidebarHidden","toggleSwitch","console","log","trainOn","ReactDOM","render","train","document","getElementById","classNameSidebar","classNameMenuToggle","this","classNameSwitch","classNameSwitchHandle","classNameSwitchText","switchText","id","onClick","React","Component","Star","StarLose","cardColor","reverse","classList","remove","removeEventListener","getEvent","e","target","currentTarget","closest","addEventListener","playSound","dataset","audio","addr","Audio","currentTime","play","gameStarted","Main","starsList","buttonStart","Number","addStar","cardsCategory","playGame","randomNumber","Math","floor","random","length","setTimeout","del","y","splice","querySelector","checkCard","alt","add","src","gameList","i","indexCategory","addrImage","process","getGameList","categoryList","button","App","path","exact","match","params"],"mappings":"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","file":"static/js/main.00648e2e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './main.css';\r\nimport cards from './../../assets/cards';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport {Star, StarLose} from './star';\r\n\r\nlet cardColor = 'card_train';\r\nlet el: any;\r\nlet rightCard: string;\r\nlet deleteCard: number;\r\n\r\nfunction reverse() {\r\n  console.log('ee')\r\n  el.classList.remove('flipped');\r\n  el.removeEventListener('mouseleave', reverse);\r\n}\r\nfunction  getEvent (e: any) {\r\n  if (e.target.className === 'card__button') {\r\n    el = e.currentTarget.closest('.card-container');\r\n    el.className += ' flipped';\r\n    el.addEventListener('mouseleave', reverse);\r\n  } else playSound(e.currentTarget.dataset.audio);\r\n}\r\nfunction playSound(addr: string) {\r\n  const audio = new Audio(process.env.PUBLIC_URL + '/' + addr);\r\n  audio.currentTime = 0;\r\n  audio.play();\r\n}\r\nlet buttonStartPush = false;\r\ninterface IProps {\r\n  index: string,\r\n  train: boolean,\r\n}\r\ninterface IState {\r\n  starsList: string[],\r\n  buttonStart: boolean,\r\n  gameStarted:boolean,\r\n  cards:any[],\r\n}\r\nlet gameStarted = false;\r\n////////////////////////\r\nclass Main extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {starsList: [''],\r\n    buttonStart: false,\r\n    gameStarted: false,\r\n    cards: [...cards[Number(this.props.index)]] as {word: string, translation: string, image: string, audioSrc: string}[]};\r\n  }\r\n\r\n  render() {\r\n    \r\n  \r\n    console.log('gameStarted', gameStarted)\r\n    //let gameStarted = !this.state.buttonStart;\r\n    const addStar = (el: any) => {\r\n      this.setState((state: any) => ({\r\n        starsList: [...state.starsList, el]\r\n      }))\r\n    }\r\n    // const pushButtonStart = () => {\r\n    //   this.setState((state: any) => ({\r\n    //     buttonStart: !state.buttonStart\r\n    //   }))\r\n    // }\r\n    // const pushButtonStart2 = () => {\r\n    //   this.setState((state: any) => ({\r\n    //     buttonStart: !state.buttonStart\r\n    //   }))\r\n    // }\r\n    \r\n    const pushButtonStart = () => {\r\n      this.setState({\r\n        buttonStart: true\r\n      })\r\n    }\r\n    const pushButtonStart2 = () => {\r\n      this.setState({\r\n        buttonStart: false\r\n      })\r\n    }\r\n\r\n    const index = this.props.index;\r\n    let train = this.props.train;\r\n    const getCategoryList = () => {\r\n      return (\r\n        cards[0].map((item, index) => {\r\n          const arr = [...cards[index + 1]] as {word: string, translation: string, image: string, audioSrc: string}[];\r\n          const addrImage = '/' + arr[0].image;\r\n          return (\r\n            <div className=\"card-container\" key={arr[0].word}>\r\n              <Link to={\"/main/\" + (index + 1)} className={'card ' + cardColor} key = {item.toString()}>\r\n                <img src={addrImage} alt={arr[0].word} className=\"card__image_back\"></img>\r\n                {item}\r\n            </Link>\r\n            </div>\r\n          );\r\n        })\r\n      )\r\n    }\r\n    const getGameList = (i: string, train: boolean) => {\r\n      const indexCategory = Number(i);\r\n      return (\r\n        cards[indexCategory].map((item) => {\r\n          const arr = item as {word: string, translation: string, image: string, audioSrc: string};\r\n          const addrImage = '/' + arr.image;\r\n          if (train) {\r\n            return (\r\n              <div className=\"card-container\" key={arr.word}>\r\n                <div className=\"card card_eng\" data-audio={arr.audioSrc} onClick={getEvent}>\r\n                  <img src={process.env.PUBLIC_URL + addrImage} alt={arr.word} className=\"card__image_front\"></img>\r\n                  {arr.word}\r\n                  <div className=\"card__button\"></div>\r\n                </div>\r\n                <div className=\"card card_ru\">\r\n                  <img src={process.env.PUBLIC_URL + addrImage} alt={arr.word} className=\"card__image_front\"></img>\r\n                  {arr.translation}\r\n                </div>\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div className=\"card-container\" key={arr.word}>\r\n                <div className=\"card\" data-audio={arr.audioSrc}>\r\n                  <img src={process.env.PUBLIC_URL + addrImage} alt={arr.word} className=\"card__image_front\" onClick={checkCard}></img>\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        })\r\n      )\r\n    }\r\n    function startGame() {\r\n      \r\n      // const cards = document.querySelectorAll('.card');\r\n      // cards.forEach((card) => {\r\n      //   //console.log('cards-',card)\r\n      //   card.classList.remove('card_guessed');\r\n      // })\r\n\r\n      const buttonStart = document.querySelector('.main__button');\r\n      buttonStart?.classList.add('main__button_push');\r\n      setTimeout(() => {\r\n        buttonStart?.classList.remove('main__button_push');\r\n        }, 500);\r\n        //console.log('gameStarted', gameStarted)\r\n      //if (!gameStarted) setTimeout(pushButtonStart,600);\r\n      setTimeout(() => {\r\n        ReactDOM.render(<App train={false}/>, document.getElementById('root'));\r\n        }, 600);\r\n        if (!gameStarted) gameStarted=true;\r\n      playGame();\r\n      }\r\n  \r\n    const cardsCategory = [...this.state.cards];\r\n    \r\n    function playGame() {\r\n      console.log(cardsCategory)\r\n      let randomNumber = Math.floor(Math.random() * cardsCategory.length);\r\n      const addr = cardsCategory[randomNumber].audioSrc;\r\n      //console.log(cardsCategory[randomNumber].audioSrc);\r\n      setTimeout(() => playSound(addr), 1000);\r\n      rightCard = cardsCategory[randomNumber].word;\r\n      //deleteCard = randomNumber;\r\n      del(randomNumber);\r\n    }\r\n\r\n    const del = (y:number)=> {\r\n      cardsCategory.splice(y,1)\r\n      this.setState((state: any) => ({\r\n        cards: [...cardsCategory]\r\n      }))\r\n    }\r\n\r\n    const star_container = document.querySelector('.star-container');\r\n    function checkCard(e: any) {\r\n      if (e.target.alt === rightCard) {\r\n        playSound('audio/correct.mp3');\r\n        e.target.closest('.card').classList.add('card_guessed');\r\n        //del(deleteCard);\r\n        addStar(<Star />);\r\n        if (cardsCategory.length > 0) playGame();\r\n        else {\r\n          playSound('audio/success.mp3');\r\n          ReactDOM.render(\r\n            <div className=\"win-image_wrapper\">\r\n              <img src={process.env.PUBLIC_URL + '/img/success.jpg'} alt=\"success\" className=\"win-image\"></img>\r\n            </div>,\r\n            document.getElementById('root')\r\n          );\r\n          setTimeout(() => {\r\n            ReactDOM.render(<App />, document.getElementById('root'));\r\n          }, 2000)\r\n        }\r\n      } else {\r\n        playSound('audio/error.mp3');\r\n        addStar(<StarLose />);\r\n      }\r\n    }\r\n    cardColor = train ? 'card_train' : 'card_game';\r\n    if (train) rightCard = '';\r\n    const gameList = getGameList(index, train);\r\n    const categoryList = getCategoryList();\r\n    const list = index === '0' ? categoryList : gameList;\r\n    let button = '';\r\n    if (gameStarted && !train && index !== '0') {\r\n      button += 'main__button main__button_restart';\r\n    } else {\r\n      button = (train || index === '0') ? 'main__button hidden' : 'main__button';\r\n      gameStarted = false;\r\n    }\r\n\r\n    return (\r\n      <div className=\"main_wrapper\">\r\n        <div className=\"star-container\">\r\n        {this.state.starsList}\r\n        </div>\r\n        <main className=\"main\">\r\n          {list}\r\n        </main>\r\n        <button className={button} onClick={startGame}></button>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  }\r\n\r\nexport default Main;\r\n///////////////////////////////","const cards = [ \n  ['Action (set A)', 'Action (set B)', 'Animal (set A)', 'Animal (set B)', 'Clothes', 'Emotions'],\n  [\n    {\n      word: 'cry',\n      translation: 'плакать',\n      image: 'img/cry.jpg',\n      audioSrc: 'audio/cry.mp3'\n    },\n    {\n      word: 'dance',\n      translation: 'танцевать',\n      image: 'img/dance.jpg',\n      audioSrc: 'audio/dance.mp3'\n    },\n    {\n      word: 'dive',\n      translation: 'нырять',\n      image: 'img/dive.jpg',\n      audioSrc: 'audio/dive.mp3'\n    },\n    {\n      word: 'draw',\n      translation: 'рисовать',\n      image: 'img/draw.jpg',\n      audioSrc: 'audio/draw.mp3'\n    },\n    {\n      word: 'fish',\n      translation: 'ловить рыбу',\n      image: 'img/fish.jpg',\n      audioSrc: 'audio/fish.mp3'\n    },\n    {\n      word: 'fly',\n      translation: 'летать',\n      image: 'img/fly.jpg',\n      audioSrc: 'audio/fly.mp3'\n    },\n    {\n      word: 'hug',\n      translation: 'обнимать',\n      image: 'img/hug.jpg',\n      audioSrc: 'audio/hug.mp3'\n    },\n    {\n      word: 'jump',\n      translation: 'прыгать',\n      image: 'img/jump.jpg',\n      audioSrc: 'audio/jump.mp3'\n    }\n  ],\n  [\n    {\n      word: 'open',\n      translation: 'открывать',\n      image: 'img/open.jpg',\n      audioSrc: 'audio/open.mp3'\n    },\n    {\n      word: 'play',\n      translation: 'играть',\n      image: 'img/play.jpg',\n      audioSrc: 'audio/play.mp3'\n    },\n    {\n      word: 'point',\n      translation: 'указывать',\n      image: 'img/point.jpg',\n      audioSrc: 'audio/point.mp3'\n    },\n    {\n      word: 'ride',\n      translation: 'ездить',\n      image: 'img/ride.jpg',\n      audioSrc: 'audio/ride.mp3'\n    },\n    {\n      word: 'run',\n      translation: 'бегать',\n      image: 'img/run.jpg',\n      audioSrc: 'audio/run.mp3'\n    },\n    {\n      word: 'sing',\n      translation: 'петь',\n      image: 'img/sing.jpg',\n      audioSrc: 'audio/sing.mp3'\n    },\n    {\n      word: 'skip',\n      translation: 'пропускать, прыгать',\n      image: 'img/skip.jpg',\n      audioSrc: 'audio/skip.mp3'\n    },\n    {\n      word: 'swim',\n      translation: 'плавать',\n      image: 'img/swim.jpg',\n      audioSrc: 'audio/swim.mp3'\n    }\n  ],\n  [\n    {\n      word: 'cat',\n      translation: 'кот',\n      image: 'img/cat.jpg',\n      audioSrc: 'audio/cat.mp3'\n    },\n    {\n      word: 'chick',\n      translation: 'цыплёнок',\n      image: 'img/chick.jpg',\n      audioSrc: 'audio/chick.mp3'\n    },\n    {\n      word: 'chicken',\n      translation: 'курица',\n      image: 'img/chicken.jpg',\n      audioSrc: 'audio/chicken.mp3'\n    },\n    {\n      word: 'dog',\n      translation: 'собака',\n      image: 'img/dog.jpg',\n      audioSrc: 'audio/dog.mp3'\n    },\n    {\n      word: 'horse',\n      translation: 'лошадь',\n      image: 'img/horse.jpg',\n      audioSrc: 'audio/horse.mp3'\n    },\n    {\n      word: 'pig',\n      translation: 'свинья',\n      image: 'img/pig.jpg',\n      audioSrc: 'audio/pig.mp3'\n    },\n    {\n      word: 'rabbit',\n      translation: 'кролик',\n      image: 'img/rabbit.jpg',\n      audioSrc: 'audio/rabbit.mp3'\n    },\n    {\n      word: 'sheep',\n      translation: 'овца',\n      image: 'img/sheep.jpg',\n      audioSrc: 'audio/sheep.mp3'\n    }\n  ],\n  [\n    {\n      word: 'bird',\n      translation: 'птица',\n      image: 'img/bird.jpg',\n      audioSrc: 'audio/bird.mp3'\n    },\n    {\n      word: 'fish',\n      translation: 'рыба',\n      image: 'img/fish1.jpg',\n      audioSrc: 'audio/fish.mp3'\n    },\n    {\n      word: 'frog',\n      translation: 'жаба',\n      image: 'img/frog.jpg',\n      audioSrc: 'audio/frog.mp3'\n    },\n    {\n      word: 'giraffe',\n      translation: 'жирафа',\n      image: 'img/giraffe.jpg',\n      audioSrc: 'audio/giraffe.mp3'\n    },\n    {\n      word: 'lion',\n      translation: 'лев',\n      image: 'img/lion.jpg',\n      audioSrc: 'audio/lion.mp3'\n    },\n    {\n      word: 'mouse',\n      translation: 'мышь',\n      image: 'img/mouse.jpg',\n      audioSrc: 'audio/mouse.mp3'\n    },\n    {\n      word: 'turtle',\n      translation: 'черепаха',\n      image: 'img/turtle.jpg',\n      audioSrc: 'audio/turtle.mp3'\n    },\n    {\n      word: 'dolphin',\n      translation: 'дельфин',\n      image: 'img/dolphin.jpg',\n      audioSrc: 'audio/dolphin.mp3'\n    }\n  ],\n  [\n    {\n      word: 'skirt',\n      translation: 'юбка',\n      image: 'img/skirt.jpg',\n      audioSrc: 'audio/skirt.mp3'\n    },\n    {\n      word: 'pants',\n      translation: 'брюки',\n      image: 'img/pants.jpg',\n      audioSrc: 'audio/pants.mp3'\n    },\n    {\n      word: 'blouse',\n      translation: 'блузка',\n      image: 'img/blouse.jpg',\n      audioSrc: 'audio/blouse.mp3'\n    },\n    {\n      word: 'dress',\n      translation: 'платье',\n      image: 'img/dress.jpg',\n      audioSrc: 'audio/dress.mp3'\n    },\n    {\n      word: 'boot',\n      translation: 'ботинок',\n      image: 'img/boot.jpg',\n      audioSrc: 'audio/boot.mp3'\n    },\n    {\n      word: 'shirt',\n      translation: 'рубашка',\n      image: 'img/shirt.jpg',\n      audioSrc: 'audio/shirt.mp3'\n    },\n    {\n      word: 'coat',\n      translation: 'пальто',\n      image: 'img/coat.jpg',\n      audioSrc: 'audio/coat.mp3'\n    },\n    {\n      word: 'shoe',\n      translation: 'туфли',\n      image: 'img/shoe.jpg',\n      audioSrc: 'audio/shoe.mp3'\n    }\n  ],\n  [\n    {\n      word: 'sad',\n      translation: 'грустный',\n      image: 'img/sad.jpg',\n      audioSrc: 'audio/sad.mp3'\n    },\n    {\n      word: 'angry',\n      translation: 'сердитый',\n      image: 'img/angry.jpg',\n      audioSrc: 'audio/angry.mp3'\n    },\n    {\n      word: 'happy',\n      translation: 'счастливый',\n      image: 'img/happy.jpg',\n      audioSrc: 'audio/happy.mp3'\n    },\n    {\n      word: 'tired',\n      translation: 'уставший',\n      image: 'img/tired.jpg',\n      audioSrc: 'audio/tired.mp3'\n    },\n    {\n      word: 'surprised',\n      translation: 'удивлённый',\n      image: 'img/surprised.jpg',\n      audioSrc: 'audio/surprised.mp3'\n    },\n    {\n      word: 'scared',\n      translation: 'испуганный',\n      image: 'img/scared.jpg',\n      audioSrc: 'audio/scared.mp3'\n    },\n    {\n      word: 'smile',\n      translation: 'улыбка',\n      image: 'img/smile.jpg',\n      audioSrc: 'audio/smile.mp3'\n    },\n    {\n      word: 'laugh',\n      translation: 'смех',\n      image: 'img/laugh.jpg',\n      audioSrc: 'audio/laugh.mp3'\n    }\n  ]\n]\n\nexport default cards;\n","import './topics-list.css';\r\nimport cards from './../../assets/cards';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst arr = ['Main Page',...cards[0]];\r\n\r\nconst TopicsList = ({index = '0'}) => {\r\n  const list = arr.map((item, ind) => {\r\n    let classLink = 'sidebar__link';\r\n    if (ind.toString() === index) {\r\n      classLink = 'sidebar__link sidebar__link_onClick'\r\n    }\r\n      return (\r\n        <li className=\"sidebar__item\" key={item.toString()}>\r\n          <Link to={'/main/' + ind} className={classLink}>{item}</Link>\r\n        </li>\r\n      )\r\n  })\r\n  return (\r\n    <ul className=\"sidebar__list\">\r\n      {list}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default TopicsList;\r\n","import './sidebar.css';\r\nimport TopicsList from './topics-list';\r\n\r\nconst Sidebar = (props: any) => {\r\n  return (\r\n    <div className={props.class}>\r\n      <TopicsList  index={props.index}/>\r\n      <input type=\"text\" value=\"Login\" className=\"sidebar__login\"></input>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './header.css';\r\nimport Sidebar from './sidebar';\r\nimport App from './app';\r\n\r\ninterface IProps {\r\n  index: string,\r\n  train: boolean,\r\n}\r\n\r\ninterface IState {\r\n  sidebarHidden: boolean,\r\n  trainOn: boolean,\r\n}\r\n\r\nclass Header extends React.Component<IProps, IState> {\r\n  constructor (props:any) {\r\n    super(props);\r\n    this.state = {\r\n      sidebarHidden: true,\r\n      trainOn: true,\r\n    };\r\n  }\r\n  toggleSidebar = () => {\r\n    this.setState((state) => ({\r\n      sidebarHidden: !state.sidebarHidden,\r\n    })\r\n    );\r\n  }\r\n  toggleSwitch = () => {\r\n    console.log('toggleSwitch this.state.trainOn',this.state.trainOn)\r\n    this.setState((state) => ({\r\n    trainOn: !state.trainOn,\r\n    }));\r\n    ReactDOM.render(<App train={!this.state.trainOn}/>, document.getElementById('root'));\r\n  }\r\n\r\n  render() {\r\n    let classNameSidebar = 'sidebar';\r\n    let classNameMenuToggle = 'menu-toggle';\r\n    const sidebarHidden = this.state.sidebarHidden;\r\n    if (sidebarHidden) {\r\n      classNameSidebar += ' sidebar_hidden';\r\n      classNameMenuToggle += ' menu-toggle_set-hidden';\r\n    }\r\n    let classNameSwitch = 'switch';\r\n    let classNameSwitchHandle = 'switch__handle';\r\n    let classNameSwitchText = 'switch__text';\r\n    let switchText = 'train';\r\n    if (this.state.trainOn !== this.props.train) {\r\n      this.setState((state) => ({\r\n        trainOn: !state.trainOn,\r\n        }));\r\n    }\r\n    const trainOn = this.state.trainOn;\r\n    console.log('trainOn',trainOn)\r\n    if (!trainOn) {\r\n      classNameSwitch += ' switch_game';\r\n      classNameSwitchHandle += ' switch__handle_game';\r\n      classNameSwitchText = 'switch__text_game';\r\n      switchText = 'game';\r\n      classNameSidebar += ' sidebar_game';\r\n     }\r\n    return (\r\n      <header className=\"header\" id=\"headerId\">\r\n        <Sidebar class={classNameSidebar} index={this.props.index} id=\"sidebarId\" />\r\n        <nav className={classNameMenuToggle} onClick={this.toggleSidebar}>\r\n        </nav>\r\n        <div className={classNameSwitch} onClick={this.toggleSwitch}>\r\n          <div className={classNameSwitchHandle}></div>\r\n          <div className={classNameSwitchText}>{switchText}</div>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './star.css';\r\n\r\nconst Star = () => {\r\n  return (\r\n    <div className=\"star\"></div>\r\n  )\r\n}\r\nconst StarLose = () => {\r\n  return (\r\n    <div className=\"star_lose\"></div>\r\n  )\r\n}\r\n\r\nexport {Star, StarLose};\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport Header from './header'\r\nimport Main from './main';\r\n\r\nconst App = ({train = true}) => {\r\n  console.log('app', train)\r\n  return(\r\n  <Router>\r\n    <div className=\"app\">\r\n      <Route path=\"/\" exact> \r\n        <div>\r\n          <Header index=\"0\" train={train} />\r\n          <Main train={train} index=\"0\"/>\r\n        </div>\r\n       </Route>\r\n      {/* <Route path=\"/main\" exact render={() => {\r\n        return <Main index=\"0\"/>\r\n      }} /> */}\r\n      <Route path=\"/main/:id\" render={({match}) => {\r\n        console.log('Route path=/main/:id',train);\r\n        const id = match.params.id;\r\n        return (\r\n          <div>\r\n            <Header index={id} train={train}/>\r\n            <Main index={id} train={train} />\r\n          </div>\r\n        )\r\n      }} />\r\n    </div>\r\n  </Router>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/user/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}