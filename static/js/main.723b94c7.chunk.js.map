{"version":3,"sources":["components/user/main.tsx","components/user/topics-list.tsx","components/user/sidebar.tsx","components/user/header.tsx","components/user/star.tsx","assets/rs_school_js.svg","components/user/footer.tsx","components/admin/login.tsx","components/admin/card-category.tsx","components/admin/card-category-new.tsx","components/admin/admin-page.tsx","components/user/app.tsx","index.tsx"],"names":["el","rightCard","server","TopicsList","index","cardsArray","list","map","item","ind","classLink","toString","className","to","Sidebar","props","class","type","onClick","showLogin","Header","toggleSwitch","setState","state","trainOn","setTrain","sidebarHidden","classNameSidebar","classNameMenuToggle","this","sidebar","classNameSwitch","classNameSwitchHandle","classNameSwitchText","switchText","train","id","toggleSidebar","React","Component","Star","StarLose","cardColor","reverseCard","classList","remove","removeEventListener","getEvent","e","target","currentTarget","closest","addEventListener","playSound","dataset","audio","addr","Audio","currentTime","play","Main","playGame","cardsCategory","cards","randomNumber","Math","floor","random","length","audioSrc","setTimeout","word","playedSoundAddr","cardDelete","checkCard","gamePlay","alt","splice","add","addStar","starsList","getCategoryList","categoryList","arr","addrImage","image","src","getGameList","i","indexCategory","Number","translation","buttonStart","console","log","button","gameStarted","document","querySelector","repeatSound","history","push","startGame","withRouter","Footer","href","height","viewBox","version","width","d","logo","Login","classLoginWrapper","placeholder","sendLogin","CardCategory","showUpdateCategory","update","updateCategory","input","getElementById","value","test","sendUpdateCategory","setUpdateCategory","alert","deleteCategory","sendDeleteCategory","setDeleteCategory","cardsQuantity","CardCategoryNew","showCreateCategory","create","createCategory","a","sendCreateCategory","setCreateCategory","AdminPage","addMoreData","items","hasMore","nextCategories","slice","categories","showAdminPage","dataLength","next","loader","App","pass","user","l","p","fetch","method","headers","body","JSON","stringify","then","res","ok","text","json","categoryName","category","hideSidebar","querySelectorAll","forEach","adminPage","serverAvailable","getCardsArray","response","catch","from","path","exact","render","match","params","ReactDOM"],"mappings":"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","file":"static/js/main.723b94c7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './main.css';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport {Star, StarLose} from './star';\r\nimport Card from './card';\r\n\r\nlet cardColor = 'card_train';\r\nlet el: any;\r\nlet rightCard: string;\r\nlet server: string;\r\n\r\nfunction reverseCard() {\r\n  el.classList.remove('flipped');\r\n  el.removeEventListener('mouseleave', reverseCard);\r\n}\r\nfunction  getEvent (e: any) {\r\n  if (e.target.className === 'card__button') {\r\n    el = e.currentTarget.closest('.card-container');\r\n    el.className += ' flipped';\r\n    el.addEventListener('mouseleave', reverseCard);\r\n  } else playSound(server + e.currentTarget.dataset.audio);\r\n}\r\nfunction playSound(addr: string) {\r\n  const audio = new Audio(addr);\r\n  audio.currentTime = 0;\r\n  audio.play();\r\n}\r\nfunction repeatSound(addr: string) {\r\n  const buttonStart = document.querySelector('.main__button');\r\n  buttonStart?.classList.add('main__button_push');\r\n  setTimeout(() => {\r\n    buttonStart?.classList.remove('main__button_push');\r\n    }, 500);\r\n  setTimeout(() => {\r\n    playSound(addr)\r\n    }, 600);\r\n}\r\n\r\ninterface IProps {\r\n  index: string,\r\n  train: boolean,\r\n  startGame: () => any,\r\n  gameStarted: boolean,\r\n  match: any,\r\n  location: any,\r\n  history: any,\r\n  setTrain: () => any,\r\n  cardsArray: any[],\r\n  server: string,\r\n}\r\ninterface IState {\r\n  starsList: string[],\r\n  buttonStart: boolean,\r\n  gamePlay:boolean,\r\n  cardsArray:any[],\r\n  cards:any[],\r\n  playedSoundAddr: string,\r\n  cardDelete: number,\r\n  categoryList: string[],\r\n}\r\n\r\nclass Main extends React.Component<IProps, IState> {\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n        cardDelete: 0,\r\n        starsList: [],\r\n        playedSoundAddr: '',\r\n        buttonStart: false,\r\n        gamePlay: false,\r\n        cardsArray: [...this.props.cardsArray],\r\n        cards: [...this.props.cardsArray[Number(this.props.index)]] as Card[],\r\n        categoryList: [...this.props.cardsArray[0]],\r\n     }\r\n  }\r\n\r\n  playGame =() => {\r\n    let cardsCategory = [] as Card[];\r\n    if (this.state.cards) cardsCategory =  [...this.state.cards];\r\n    const randomNumber = Math.floor(Math.random() * cardsCategory.length);\r\n    const addr = (typeof cardsCategory[randomNumber] === 'object') ? server + cardsCategory[randomNumber].audioSrc : '';\r\n    setTimeout(() => playSound(addr), 700);\r\n    rightCard = cardsCategory[randomNumber].word;\r\n    this.setState({\r\n      playedSoundAddr: addr,\r\n      cardDelete: randomNumber,\r\n    })\r\n  }\r\n  checkCard = (e: any) => {\r\n    if (this.state.gamePlay) {\r\n      if (e.target.alt === rightCard) {\r\n        let cardsCategory = [] as Card[];\r\n        if (this.state.cards) cardsCategory =  [...this.state.cards];\r\n        cardsCategory.splice(this.state.cardDelete, 1);\r\n        this.setState({\r\n        cards: [...cardsCategory],\r\n        })\r\n        playSound(process.env.PUBLIC_URL + '/audio/correct.mp3');\r\n        e.target.closest('.card').classList.add('card_guessed');\r\n        this.addStar(<Star />);\r\n        setTimeout(() => { if (cardsCategory.length > 0) this.playGame();})\r\n      } else {\r\n        playSound(process.env.PUBLIC_URL + '/audio/error.mp3');\r\n        this.addStar(<StarLose />);\r\n      }\r\n    }\r\n  }\r\n  addStar = (el: any) => {\r\n    this.setState((state: any) => ({\r\n      starsList: [el, ...state.starsList]\r\n    }))\r\n  }\r\n  getCategoryList = () => {\r\n    return (\r\n      this.state.categoryList.map((item, index) => {\r\n        if (this.state.cardsArray[index + 1].length) {\r\n        const arr = [...this.state.cardsArray[index + 1]] as {word: string, translation: string, image: string, audioSrc: string}[];\r\n        const addrImage = server + arr[0].image;\r\n          return (\r\n            <div className=\"card-container\" key={item}>\r\n              <Link to={\"/main/\" + (index + 1)} className={'card ' + cardColor} key = {item.toString()}>\r\n                <img src={addrImage} alt={arr[0].word} className=\"card__image_back\"></img>\r\n                {item}\r\n              </Link>\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"card-container\" key={item}>\r\n              <Link to={\"/main/\" + (index + 1)} className={'card ' + cardColor} key = {item.toString()}>\r\n                <img src={process.env.PUBLIC_URL + '/image/no-image.jfif'} alt='no foto' className=\"card__image_back\"></img>\r\n                {item}\r\n              </Link>\r\n            </div>\r\n          );\r\n        }\r\n      })\r\n    )\r\n  }\r\n  getGameList = (i: string, train: boolean) => {\r\n    const indexCategory = Number(i) === 0 ? 1 : Number(i);\r\n    return (\r\n      this.state.cardsArray[indexCategory].map((item: any) => {\r\n        const arr = item as {word: string, translation: string, image: string, audioSrc: string};\r\n        const addrImage = server + arr.image;\r\n        if (train) {\r\n          return (\r\n            <div className=\"card-container\" key={arr.word}>\r\n              <div className=\"card card_eng\" data-audio={arr.audioSrc} onClick={getEvent}>\r\n                <img src={addrImage} alt={arr.word} className=\"card__image_front\"></img>\r\n                {arr.word}\r\n                <div className=\"card__button\"></div>\r\n              </div>\r\n              <div className=\"card card_ru\">\r\n                <img src={addrImage} alt={arr.word} className=\"card__image_front\"></img>\r\n                {arr.translation}\r\n              </div>\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"card-container\" key={arr.word}>\r\n              <div className=\"card\" data-audio={arr.audioSrc}>\r\n                <img src={addrImage} alt={arr.word} className=\"card__image_front\" onClick={(e: any) => this.checkCard(e)}></img>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  render() {\r\n    console.log('this.state.cards.length',this.state.cards.length)\r\n    server = this.props.server;\r\n    const index = this.props.index;\r\n    let train = this.props.train;\r\n    cardColor = train ? 'card_train' : 'card_game';\r\n    \r\n    if (train) rightCard = '';\r\n\r\n    const button = (train || index === '0') ? 'main__button hidden' : 'main__button';\r\n    \r\n    if(this.props.gameStarted && !this.state.gamePlay && Number(this.props.index)) {\r\n      this.setState({\r\n        gamePlay: true,\r\n        cards: [...this.props.cardsArray[Number(this.props.index)]],\r\n      });\r\n      setTimeout(() => this.playGame(), 100) \r\n    } else if ((!this.props.gameStarted && this.state.gamePlay)) {\r\n      this.setState({\r\n        gamePlay: false,\r\n        cards: [...this.props.cardsArray[Number(this.props.index)]],\r\n        starsList: [],\r\n      });\r\n    }\r\n\r\n    const list = index === '0' ? this.getCategoryList() : this.getGameList(index, train);\r\n\r\n    if (this.state.cardsArray[Number(index)].length) {\r\n      if (this.state.gamePlay) {\r\n        if (this.state.cards.length) {\r\n          return (\r\n            <div className=\"main_wrapper\">\r\n              <div className=\"star-container\">\r\n              <div className=\"star-container_wrapper\">\r\n              {this.state.starsList}\r\n              </div></div>\r\n              <main className=\"main\">\r\n                {list}\r\n              </main>\r\n              <button className=\"main__button main__button_repeat\" onClick={() => repeatSound(this.state.playedSoundAddr)}></button>\r\n            </div>\r\n          )\r\n        } else {\r\n          if (this.state.starsList.length === 8) {\r\n            playSound(process.env.PUBLIC_URL + '/audio/success.mp3');\r\n            setTimeout(() => {\r\n              this.setState({cards: [...this.props.cardsArray[Number(this.props.index)]],\r\n            })\r\n              this.props.setTrain();\r\n              this.props.history.push('/');\r\n            }, 3000)\r\n            return(\r\n              <div className=\"win-lose-image_wrapper\">\r\n                <img src={process.env.PUBLIC_URL + '/image/success.jpg'} alt=\"success\" className=\"win-lose-image\"></img>\r\n              </div>\r\n            );\r\n          } else {\r\n            playSound(process.env.PUBLIC_URL + '/audio/failure.mp3');\r\n            setTimeout(() => {\r\n              this.setState({cards: [...this.props.cardsArray[Number(this.props.index)]],});\r\n              this.props.setTrain();\r\n              this.props.history.push('/');\r\n            }, 3000)\r\n            return(\r\n              <div className=\"win-lose-image_wrapper\">\r\n                <img src={process.env.PUBLIC_URL + '/image/failure.jpg'} alt=\"failure\" className=\"win-lose-image\"></img>\r\n                <span className=\"win-lose-image__text\">You have {this.state.starsList.length - 8} mistake(s)!</span>\r\n              </div>\r\n            );\r\n          } \r\n        }\r\n      } else {\r\n        return (\r\n          <div className=\"main_wrapper\">\r\n            <main className=\"main\">\r\n              {list}\r\n            </main>\r\n            <button className={button} onClick={this.props.startGame}></button>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"main_wrapper\">\r\n          <main className=\"main\">\r\n            <h3 className=\"no-cards\">\r\n              Sorry, but this category is empty...\r\n            </h3>\r\n          </main>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Main);\r\n","import './topics-list.css';\r\n// import cards from './../../assets/cards';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TopicsList = ({index = '0', cardsArray = []}) => {\r\n  const arr = ['Main Page',...cardsArray];\r\n  const list = arr.map((item, ind) => {\r\n    let classLink = 'sidebar__link';\r\n    if (ind.toString() === index) {\r\n      classLink = 'sidebar__link sidebar__link_onClick'\r\n    }\r\n    return (\r\n      <li className=\"sidebar__item\" key={item.toString()}>\r\n        <Link to={'/main/' + ind} className={classLink}>{item}</Link>\r\n      </li>\r\n    )\r\n  })\r\n  return (\r\n    <ul className=\"sidebar__list\">\r\n      {list}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default TopicsList;\r\n","import './sidebar.css';\r\nimport TopicsList from './topics-list';\r\n\r\n\r\nconst Sidebar = (props: any) => {\r\n\r\n  return (\r\n    <div className={props.class}>\r\n      <TopicsList  index={props.index} cardsArray={props.cardsArray}/>\r\n      <button type=\"button\" className=\"sidebar__button\" onClick={props.showLogin}>Login</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport './header.css';\r\nimport Sidebar from './sidebar';\r\n\r\ninterface IProps {\r\n  index: string,\r\n  train: boolean,\r\n  sidebar: boolean,\r\n  toggleSidebar?: (e: any) => void,\r\n  setTrain: () => any,\r\n  showLogin: () => any,\r\n  cardsArray: [],\r\n}\r\ninterface IState {\r\n  sidebarHidden: boolean,\r\n  trainOn: boolean,\r\n}\r\n\r\nclass Header extends React.Component<IProps, IState> {\r\n\r\n  constructor (props:any) {\r\n    super(props);\r\n    this.state = {\r\n      sidebarHidden: true,\r\n      trainOn: true,\r\n    };\r\n  }\r\n\r\n  toggleSwitch = () => {\r\n    this.setState((state) => ({\r\n    trainOn: !state.trainOn,\r\n    }));\r\n    this.props.setTrain();\r\n  }\r\n\r\n  render() {\r\n    let classNameSidebar = 'sidebar';\r\n    let classNameMenuToggle = 'menu-toggle';\r\n    const sidebarHide = this.props.sidebar;\r\n    if (sidebarHide) {\r\n      classNameSidebar += ' sidebar_hidden';\r\n      classNameMenuToggle += ' menu-toggle_set-hidden';\r\n    }\r\n    let classNameSwitch = 'switch';\r\n    let classNameSwitchHandle = 'switch__handle';\r\n    let classNameSwitchText = 'switch__text';\r\n    let switchText = 'train';\r\n    if (this.state.trainOn !== this.props.train) {\r\n      this.setState((state) => ({\r\n        trainOn: !state.trainOn,\r\n        }));\r\n    }\r\n    const trainOn = this.state.trainOn;\r\n    if (!trainOn) {\r\n      classNameSwitch += ' switch_game';\r\n      classNameSwitchHandle += ' switch__handle_game';\r\n      classNameSwitchText = 'switch__text_game';\r\n      switchText = 'game';\r\n      classNameSidebar += ' sidebar_game';\r\n     }\r\n\r\n    return (\r\n      <header className=\"header\" id=\"headerId\">\r\n        <Sidebar class={classNameSidebar} index={this.props.index} id=\"sidebarId\" showLogin={this.props.showLogin} cardsArray={this.props.cardsArray}/>\r\n        <div className={classNameMenuToggle} onClick={this.props.toggleSidebar}>\r\n        </div>\r\n        <div className={classNameSwitch} onClick={this.toggleSwitch}>\r\n          <div className={classNameSwitchHandle}></div>\r\n          <div className={classNameSwitchText}>{switchText}</div>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './star.css';\r\n\r\nconst Star = () => {\r\n  return (\r\n    <div className=\"star\"></div>\r\n  )\r\n}\r\nconst StarLose = () => {\r\n  return (\r\n    <div className=\"star_lose\"></div>\r\n  )\r\n}\r\n\r\nexport {Star, StarLose};\r\n","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import './footer.css';\r\nimport logo from './../../assets/rs_school_js.svg';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <a href=\"https://github.com/uladzimir86\" className=\"footer__link\">\r\n        <svg height=\"32\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"32\" aria-hidden=\"true\">\r\n          <path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\">\r\n          </path>\r\n        </svg>\r\n        <span className=\"footer__text\">uladzimir86</span> \r\n      </a>\r\n      <a href=\"https://rs.school/js/\" className=\"footer__link\">\r\n        <img src={logo} className=\"footer__logo\"></img>\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './login.css';\r\n//import {showLogin} from './../user/sidebar';\r\n\r\n\r\nfunction Login(props: any) {\r\n  const classLoginWrapper = props.log ? \"login__wrapper\" : \"login__wrapper hidden\";\r\n  return (\r\n    <div className={classLoginWrapper}>\r\n      <div className=\"login\">\r\n        <h2 className=\"login__h2\">\r\n          Login\r\n        </h2>\r\n        <input type=\"text\" id=\"input-login\" className=\"login__input\" placeholder=\"login (admin)\"/>\r\n        <input type=\"password\" id=\"input-password\" className=\"login__input\" placeholder=\"password (admin)\"/>\r\n        <div className=\"login__footer\">\r\n          <button type=\"button\" id=\"button-cancel\" className=\"login__button login__button_cancel\" onClick={props.showLogin}>Cancel</button>\r\n          <button type=\"button\" id=\"button-login\" className=\"login__button\" onClick={props.sendLogin}>login</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\ninterface IProps {\r\n  id: number,\r\n  item: string,\r\n  update: boolean,\r\n  cardsQuantity: Number,\r\n  sendDeleteCategory: (e: any) => void,\r\n  sendUpdateCategory: (id: string, value: string) => void,\r\n  setUpdateCategory: (id: string, value: string) => void,\r\n  setDeleteCategory: (e: any) => void,\r\n}\r\ninterface IState {\r\n  update: boolean,\r\n}\r\n\r\nclass CardCategory extends React.Component<IProps, IState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      update: false,\r\n    }\r\n  }\r\n\r\n  showUpdateCategory = () => {\r\n    this.setState ((state) => ({\r\n      update: !state.update\r\n    }))\r\n  }\r\n  updateCategory  = (e: any) => {\r\n    const id = e.target.dataset.id;\r\n    const input = document.getElementById(`card-category__input-${id}`) as HTMLInputElement;\r\n    if(input.value && /\\w/.test(input.value)) {\r\n      this.props.sendUpdateCategory(id, input.value);\r\n      this.showUpdateCategory();\r\n      this.props.setUpdateCategory(id, input.value);\r\n    } else alert('To update category, enter a new category name... ')\r\n  }\r\n  deleteCategory = (e: any) => {\r\n    this.props.sendDeleteCategory(e);\r\n    this.props.setDeleteCategory(e);\r\n  }\r\n  render() {\r\n    const {id, item, cardsQuantity} = this.props;\r\n    if (!this.state.update) {\r\n      // view mode\r\n      return (\r\n        <div className=\"card-category\" key={item}>\r\n          <div className=\"card-category__delete\" onClick={this.deleteCategory} data-id={id}></div>\r\n          <h3 className=\"card-category__title\">{item}</h3>\r\n          <div className=\"card-category__text\">WORDS: {this.props.cardsQuantity}</div>\r\n          <div className=\"card-category__buttons-container\">\r\n            <button className=\"card-category__button\" data-id={id} onClick={this.showUpdateCategory}>Update</button>\r\n            <button className=\"card-category__button\" data-id={id}>Add word</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      // change mode\r\n      return (\r\n        <div className=\"card-category\" key={item}>\r\n          <div className=\"card-category__delete\" onClick={this.deleteCategory} data-id={id}></div>\r\n          <div className=\"card-category__small-text\">Category Name</div>\r\n          <input type=\"text\" className=\"card-category__input\" placeholder={item} id={'card-category__input-'+id}></input>\r\n          <div className=\"card-category__buttons-container\">\r\n            <button className=\"card-category__button card-category__button_update card-category__button_cancel\" data-id={id} onClick={this.showUpdateCategory}>Cancel</button>\r\n            <button className=\"card-category__button card-category__button_update\" data-id={id} onClick={this.updateCategory }>Create</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default CardCategory;","import React from 'react';\r\n\r\ninterface IProps {\r\n  sendCreateCategory: (value: string) => void,\r\n  setCreateCategory: () => void,\r\n}\r\ninterface IState {\r\n  create: boolean,\r\n}\r\n\r\nclass CardCategoryNew extends React.Component<IProps, IState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      create: false,\r\n    }\r\n  }\r\n\r\n  showCreateCategory = () => {\r\n    this.setState((state) => ({\r\n      create: !state.create,\r\n    }))\r\n  }\r\n  createCategory = async() => {\r\n    const input = document.getElementById('card-category-new') as HTMLInputElement;\r\n    if(input.value && /\\w/.test(input.value)) {\r\n      this.showCreateCategory();\r\n      await this.props.sendCreateCategory(input.value);\r\n      console.log('await')\r\n      this.props.setCreateCategory();\r\n    } else alert('To create a new category, enter a new category name... ')\r\n  }\r\n\r\n  render() {\r\n    if (this.state.create) {\r\n      return (\r\n        <div className=\"card-category\">\r\n          <div className=\"card-category__small-text\">Category Name</div>\r\n          <input type=\"text\" className=\"card-category__input\" placeholder=\"New category\" id=\"card-category-new\"></input>\r\n          <div className=\"card-category__buttons-container\">\r\n            <button className=\"card-category__button card-category__button_update card-category__button_cancel\" onClick={this.showCreateCategory}>Cancel</button>\r\n            <button className=\"card-category__button card-category__button_update\" onClick={this.createCategory}>Create</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"card-category card-category_new\">\r\n          <h3 className=\"card-category__title\">Create new Category</h3>\r\n          <div className=\"card-category__button-add-new\" onClick={this.showCreateCategory}></div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default CardCategoryNew;","import React from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport './admin-page.css';\r\nimport { Link } from 'react-router-dom';\r\nimport CardCategory from './card-category';\r\nimport CardCategoryNew from './card-category-new';\r\n\r\ninterface IState {\r\n  items: string[],\r\n  hasMore: boolean,\r\n}\r\ninterface IProps {\r\n  cards: string[][] | object[][],\r\n  sendDeleteCategory: (e: any) => void,\r\n  showAdminPage: () => void,\r\n  sendUpdateCategory: (id: string, value: string) => void,\r\n  sendCreateCategory: (value: string) => void,\r\n}\r\nclass AdminPage extends React.Component<IProps, IState>{\r\n  constructor (props: any) {\r\n    super(props);\r\n    this.state = {\r\n      items: this.props.cards[0].slice(0, 4) as string[],\r\n      hasMore: true,\r\n    }\r\n  }\r\n\r\n  addMoreData = () => {\r\n    if (this.state.items.length >= this.props.cards[0].length) {\r\n      this.setState({ hasMore: false });\r\n      return;\r\n    }\r\n    let allCategories = [...this.props.cards[0]] as string[];\r\n    let nextCategories = allCategories.slice(this.state.items.length, this.state.items.length+4);\r\n    this.setState((state) => ({\r\n        items: [...state.items, ...nextCategories]\r\n      }));\r\n  };\r\n  setUpdateCategory = (id: string, value: string) => {\r\n    const arr = [...this.state.items];\r\n    arr.splice(Number(id), 1, value)\r\n    this.setState ({\r\n      items: arr\r\n    })\r\n  }\r\n  setDeleteCategory = (e: any) => {\r\n    const arr = [...this.state.items];\r\n    const id = e.target.dataset.id;\r\n    arr.splice(Number(id), 1)\r\n    this.setState ({\r\n      items: arr\r\n    })\r\n  }\r\n  setCreateCategory = () => {\r\n    console.log('setCreateCategory admin-page', this.props.cards[0])\r\n    this.setState ({\r\n      items: [...this.props.cards[0]] as string[]\r\n    })\r\n  }\r\n\r\n  render() {\r\n      const cards = [...this.props.cards];\r\n      const categoriesNames = cards[0] as string[];\r\n      const categories = this.state.items.map((item: string, index: number) => {\r\n      return (\r\n        <CardCategory \r\n          id={index} \r\n          item={item} \r\n          cardsQuantity={cards[index + 1].length} \r\n          update={false} \r\n          sendDeleteCategory={this.props.sendDeleteCategory} \r\n          sendUpdateCategory={this.props.sendUpdateCategory} \r\n          setUpdateCategory={this.setUpdateCategory}\r\n          setDeleteCategory ={this.setDeleteCategory}/>\r\n      )\r\n    })\r\n    return (\r\n      <div className=\"admin\">\r\n        <header className=\"admin__header\">\r\n          <nav className=\"header__nav\">\r\n            <Link to=\"/admin/categories\" className=\"header__link\">Categories</Link>\r\n            <Link to=\"#\" className=\"header__link del-underline\">Words</Link>\r\n          </nav>\r\n          <button className=\"header__button\" onClick={this.props.showAdminPage}>Log out</button>\r\n        </header>\r\n        <main className=\"admin__main\">\r\n        <InfiniteScroll\r\n          className=\"admin__main\"\r\n          dataLength={this.state.items.length}\r\n          next={this.addMoreData}\r\n          hasMore={this.state.hasMore}\r\n          loader={<h4>Loading...</h4>}\r\n        >\r\n          {categories}\r\n          <CardCategoryNew \r\n            sendCreateCategory={this.props.sendCreateCategory} \r\n            setCreateCategory={this.setCreateCategory}\r\n          />\r\n          </InfiniteScroll>\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AdminPage;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\r\nimport Header from './header'\r\nimport Main from './main';\r\nimport './main.css';\r\nimport Footer from './footer';\r\nimport Login from './../admin/login';\r\nimport AdminPage from './../admin/admin-page';\r\n\r\nlet isCreate = false;\r\ninterface IProps {\r\n  train: boolean,\r\n  sidebar?: boolean,\r\n}\r\ninterface IState {\r\n  sidebarHidden: boolean,\r\n  gameStarted: boolean,\r\n  train: boolean,\r\n  cardsArray: any[],\r\n  log: boolean,\r\n  adminPage: boolean,\r\n  server: string,\r\n  serverAvailable: boolean,\r\n}\r\n\r\nclass App  extends React.Component<IProps, IState> {\r\n\r\n  constructor (props:any) {\r\n    super(props);\r\n    this.state = {\r\n      sidebarHidden: true,\r\n      gameStarted: false,\r\n      train: true,\r\n      cardsArray: [],\r\n      log: false,\r\n      adminPage: false,\r\n      serverAvailable: true,\r\n      server: 'https://sheltered-shore-31833.herokuapp.com/' //'http://localhost:4000/',\r\n    }\r\n    this.getCardsArray();\r\n  }\r\n\r\n  getCardsArray() {\r\n    fetch(this.state.server + 'main')\r\n      .then((response) => response.json())\r\n        .then((categories) => {\r\n          this.setState({\r\n            cardsArray: [...categories]\r\n          })\r\n        })\r\n        .catch (() => {\r\n          this.setState({\r\n            serverAvailable: false\r\n          })\r\n        })\r\n  }\r\n  sendLogin = () => {\r\n    const log = document.getElementById('input-login') as HTMLInputElement;\r\n    const pass = document.getElementById('input-password') as HTMLInputElement;\r\n    const user = {\r\n      l: log.value,\r\n      p: pass.value,\r\n    }\r\n    fetch(this.state.server + 'login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify(user)\r\n    }).then((res) => {\r\n      if (!res.ok) {\r\n        res.text().then((res) => alert(res))\r\n      } else {\r\n        this.showAdminPage()\r\n      }\r\n    })\r\n  }\r\n  sendDeleteCategory = (e: any) => {\r\n    const id = e.target.dataset.id;\r\n    fetch(this.state.server + `categories/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n    }).then((res) => res.json())\r\n      .then((res) => {\r\n        this.setState({\r\n          cardsArray: [...res]\r\n        })\r\n      })\r\n  }\r\n  sendUpdateCategory  = (id: string, value: string) => {\r\n    const categoryName = {category: value}\r\n    fetch(this.state.server + `categories/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify(categoryName)\r\n    }).then((res) => res.json())\r\n      .then((res) => {\r\n        this.setState({\r\n          cardsArray: [...res]\r\n        })\r\n      })\r\n  }\r\n  sendCreateCategory = (value: string) => {\r\n    console.log('this.props.sendCreateCategory apps', value)\r\n    const id = this.state.cardsArray[0].length + 1;\r\n    const categoryName = {category: value};\r\n    return (\r\n      fetch(this.state.server + `categories/${id}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify(categoryName)\r\n      }).then((res) => res.json())\r\n        .then((res) => {\r\n          this.setState({\r\n            cardsArray: [...res]\r\n          })\r\n        })\r\n    )\r\n  }\r\n  playSound(addr: string) {\r\n    const audio = new Audio(process.env.PUBLIC_URL + '/' + addr);\r\n    audio.currentTime = 0;\r\n    audio.play();\r\n  }\r\n  startGame = () => {\r\n    const buttonStart = document.querySelector('.main__button');\r\n    buttonStart?.classList.add('main__button_push');\r\n    setTimeout(() => {\r\n      buttonStart?.classList.remove('main__button_push');\r\n      }, 500);\r\n    setTimeout(() => {\r\n      this.setState({\r\n        gameStarted: true,\r\n      })\r\n    }, 600)\r\n  }\r\n  setTrain = () => {\r\n    this.setState((state) => ({\r\n      train: !this.state.train,\r\n    }));\r\n  }\r\n  hideSidebar = (e: any): void => {\r\n    if (this.state.sidebarHidden === false \r\n      && this.state.gameStarted) {\r\n        const links = document.querySelectorAll('.sidebar__link');\r\n        links.forEach((item) => {\r\n          if (e.target === item) {\r\n            this.setState({\r\n              gameStarted: false,\r\n            });\r\n          }\r\n        })\r\n    }\r\n    if (e.target !== document.querySelector('.sidebar')\r\n      && e.target !== document.querySelector('.sidebar__list')\r\n      && e.target !== document.querySelector('.sidebar__button')\r\n      && this.state.sidebarHidden === false) {\r\n        this.setState({\r\n          sidebarHidden: !this.state.sidebarHidden,\r\n        });\r\n    } else if (e.target === document.querySelector('.menu-toggle')) {\r\n      this.setState({\r\n        sidebarHidden: !this.state.sidebarHidden,\r\n      });\r\n    }\r\n  }\r\n  showLogin = () => {\r\n    this.setState((state) => ({\r\n      log: !state.log\r\n    }))\r\n  }\r\n  showAdminPage = () => {\r\n    this.setState((state) => ({\r\n      adminPage: !state.adminPage,\r\n      log: false,\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    const train = this.state.train;\r\n    if (train && this.state.gameStarted) {\r\n      this.setState({\r\n        gameStarted: false,\r\n      })\r\n    };\r\n    \r\n    if (this.state.cardsArray[0]) {\r\n      if ( this.state.adminPage) {\r\n        return (\r\n          (<Router>\r\n            <Redirect from=\"/\" to=\"/admin/categories\" />\r\n            <Route path=\"/admin/categories\" exact> \r\n              <AdminPage \r\n                cards={this.state.cardsArray}\r\n                sendDeleteCategory={this.sendDeleteCategory}\r\n                showAdminPage={this.showAdminPage}\r\n                sendUpdateCategory={this.sendUpdateCategory}\r\n                sendCreateCategory={this.sendCreateCategory}\r\n              />\r\n            </Route>\r\n          </Router>)\r\n        )\r\n      } else {\r\n        return(\r\n          <Router>\r\n            <div className=\"app\" onClick={this.hideSidebar}>\r\n              <Redirect from=\"/admin\" to=\"/\" />\r\n              <Route path=\"/\" exact> \r\n                <div>\r\n                  <Header index=\"0\" train={train} toggleSidebar={this.hideSidebar} sidebar={this.state.sidebarHidden} setTrain={this.setTrain} showLogin={this.showLogin} cardsArray={this.state.cardsArray[0]}/>\r\n                  <Main train={train} index=\"0\" startGame={this.startGame} gameStarted={this.state.gameStarted} setTrain={this.setTrain} cardsArray={this.state.cardsArray} server={this.state.server}/>\r\n                  <Login showLogin={this.showLogin} log={this.state.log} sendLogin={this.sendLogin} />\r\n                  <Footer />\r\n                </div>\r\n              </Route>\r\n              <Route path=\"/main/:id\" render={({match}) => {\r\n                const id = match.params.id;\r\n                return (\r\n                  <div>\r\n                    <Header index={id} train={train} toggleSidebar={this.hideSidebar} sidebar={this.state.sidebarHidden} setTrain={this.setTrain} showLogin={this.showLogin} cardsArray={this.state.cardsArray[0]}/>\r\n                    <Main index={id} train={train} startGame={this.startGame} gameStarted={this.state.gameStarted} setTrain={this.setTrain} cardsArray={this.state.cardsArray} server={this.state.server}/>\r\n                    <Login showLogin={this.showLogin} log={this.state.log} sendLogin={this.sendLogin}/>\r\n                    <Footer />\r\n                  </div>\r\n                )\r\n              }} />\r\n            </div>\r\n          </Router>\r\n        )\r\n      }\r\n    } else if (!this.state.serverAvailable){\r\n      return (\r\n        <div>\r\n          <span>No connection to server...</span>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <span>Connection...</span>\r\n        </div>\r\n      )\r\n    }\r\n    }\r\n  }\r\n\r\n  export default App;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/user/app';\n\nReactDOM.render(<App train={true}/>, document.getElementById('root'));\n"],"sourceRoot":""}